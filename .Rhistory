runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
source('~/precon dashboard/myServer.R', echo=TRUE)
source('~/precon dashboard/myServer.R', echo=TRUE)
source('~/precon dashboard/myServer.R', echo=TRUE)
source('~/precon dashboard/myServer.R', echo=TRUE)
source('~/precon dashboard/myServer.R', echo=TRUE)
source('~/precon dashboard/myServer.R', echo=TRUE)
output$clustering_picture <-
renderText({
c(
'<img src="clustering.jpeg" , width = "50%", height = "50%">'
)
})
output$clustering_picture <<-
renderText({
c(
'<img src="clustering.jpeg" , width = "50%", height = "50%">'
)
})
source('~/precon dashboard/myServer.R', echo=TRUE)
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
?eventReactive
?observeEvent
?HTML
?HTML()
?renderHTML
?renderUI
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('~/testsnippets.R')
source('~/testsnippets.R', echo=TRUE)
source('~/testsnippets.R', echo=TRUE)
?withProgress
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard/app2.R')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('~/testsnippets.R')
runApp('~/testsnippets.R')
runApp('~/testsnippets.R')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
?aes
runApp('precon dashboard')
r$dataframetemp = read.csv(file = filename, sep = ",")[0:100000, 1:2]
r$dataframetemp = read.csv(file = filename, sep = ",")[0:100000, 1:2]
filename = paste("House" , input$variable , ".csv", sep = "")
read.csv(file = "House1.csv", sep = ",")[0:100000, 1:2]
read.csv(file = "House1.csv", sep = ",")[0:1000000, 1:2]
dat = read.csv(file = "House1.csv", sep = ",")[0:100000, 1:2]
head(dat)
tail(dat)
tail(dat)
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
dat = read.csv(file = "House1.csv", sep = ",")[0:100000, 1:2]
data = read.csv(file = "House1.csv", sep = ",")[0:100000, 1:2]
data = read.csv(file = "House1.csv", sep = ",")[0:100000, 1:2]
grp_by_date = data %>% group_by(Date_Time)
# data$Date_Time = as.Date(data$Date_Time)
data$Date_Time = as.POSIXct(data$Date_Time)
# data$Date_Time = as.Date(data$Date_Time)
# data$Date_Time = as.POSIXct(data$Date_Time)
# print(class(data$Date_Time))
ggplot(data, aes(x = Date_Time, y = Usage_kW, group= 1)) + geom_boxplot() +
labs(title = "Daily Electrcity Usage",
x = "Date", y = "Daily Electrcity consumption (kW)")
# data$Date_Time = as.Date(data$Date_Time)
# data$Date_Time = as.POSIXct(data$Date_Time)
# print(class(data$Date_Time))
ggplotly(data, aes(x = Date_Time, y = Usage_kW, group= 1)) + geom_boxplot() +
labs(title = "Daily Electrcity Usage",
x = "Date", y = "Daily Electrcity consumption (kW)")
# data$Date_Time = as.Date(data$Date_Time)
# data$Date_Time = as.POSIXct(data$Date_Time)
# print(class(data$Date_Time))
ggplot(data, aes(x = Date_Time, y = Usage_kW, group= 1)) + geom_boxplot() +
labs(title = "Daily Electrcity Usage",
x = "Date", y = "Daily Electrcity consumption (kW)")
data = read.csv(file = "House1.csv", sep = ",")[0:1000000, 1:2]
grp_by_date = data %>% group_by(Date_Time)
# data$Date_Time = as.Date(data$Date_Time)
data$Date_Time = as.POSIXct(data$Date_Time)
# print(class(data$Date_Time))
ggplot(data, aes(x = Date_Time, y = Usage_kW, group= 1)) + geom_boxplot() +
labs(title = "Daily Electrcity Usage",
x = "Date", y = "Daily Electrcity consumption (kW)")
data = read.csv(file = "House1.csv", sep = ",")[0:100000, 1:2]
grp_by_date = data %>% group_by(Date_Time)
# data$Date_Time = as.Date(data$Date_Time)
data$Date_Time = as.POSIXct(data$Date_Time)
# print(class(data$Date_Time))
ggplot(data, aes(x = Date_Time, y = Usage_kW, group= 1)) + geom_boxplot() +
labs(title = "Daily Electrcity Usage",
x = "Date", y = "Daily Electrcity consumption (kW)")
?aes
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard/old_app.R')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
library(ggplot2)
measure <- runif(401)
mydata <- data.frame(date_range, measure)
mydata$year <- as.POSIXlt(date_range)$year + 1900
mydata$year_month <- paste(mydata$year, mydata$month)
mydata$sort_order <- mydata$year *100 + as.POSIXlt(date_range)$mon
#plot it
ggplot(mydata) + geom_boxplot(aes(x=reorder(year_month, sort_order), y=measure))
#generate dummy data
date_range <- as.Date("2010/06/01") + 0:400
# create new columns for the months and years, and
# and a year_month column for x-axis labels
mydata$month <- format(date_range, format="%b")
#plot it
ggplot(mydata) + geom_boxplot(aes(x=reorder(year_month, sort_order), y=measure))
library(ggplot2)
#generate dummy data
date_range <- as.Date("2010/06/01") + 0:400
measure <- runif(401)
mydata <- data.frame(date_range, measure)
# create new columns for the months and years, and
# and a year_month column for x-axis labels
mydata$month <- format(date_range, format="%b")
mydata$year <- as.POSIXlt(date_range)$year + 1900
mydata$year_month <- paste(mydata$year, mydata$month)
mydata$sort_order <- mydata$year *100 + as.POSIXlt(date_range)$mon
#plot it
ggplot(mydata) + geom_boxplot(aes(x=reorder(year_month, sort_order), y=measure))
View(mydata)
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
pal <- colorFactor(
palette = 'Blues')
latitude=c(37.78,24.77,21.56,24.77,21.56,21.56,21.47,21.48,26.39,24.77)
longitude=c(-100,46.74,39.19,46.74,39.2,39.2,39.23,39.19,49.98,46.74)
get_local_spot <-  get_map("Lahore", maptype = "roadmap", zoom = 10)
ggmap(get_local_spot)
ggmap(get_local_spot) + geom_point(data = starbucksNC, aes(x = Longitude, y = Latitude), color = "navy", size = 1)
data <- data.frame(latitude=c(37.78,24.77,21.56,24.77,21.56,21.56,21.47,21.48,26.39,24.77),
longitude=c(-100,46.74,39.19,46.74,39.2,39.2,39.23,39.19,49.98,46.74),
)
leaflet(data) %>% addTiles() %>%
addCircleMarkers(lat = ~latitude, lng = ~longitude,)
latitude=c(37.78,24.77,21.56,24.77,21.56,21.56,21.47,21.48,26.39,24.77)
longitude=c(-100,46.74,39.19,46.74,39.2,39.2,39.23,39.19,49.98,46.74)
get_local_spot <-  get_map("Lahore", maptype = "roadmap", zoom = 10)
library(tidyverse)
library(ggmap)
latitude=c(37.78,24.77,21.56,24.77,21.56,21.56,21.47,21.48,26.39,24.77)
longitude=c(-100,46.74,39.19,46.74,39.2,39.2,39.23,39.19,49.98,46.74)
get_local_spot <-  get_map("Lahore", maptype = "roadmap", zoom = 10)
?register_google
library(leaflet)
geocode <- data.frame(latitude=c(149.042,149.458,150.43,150.617,151.399,152.023,152.657,152.757,152.781,152.971),
longitude=c(-33.144,-32.105,-32.941,-32.773,-31.839,-32.869,-32.202,-31.394,-32.31,-34.918),
)
geocode <- data.frame(latitude=c(149.042,149.458,150.43,150.617,151.399,152.023,152.657,152.757,152.781,152.971),
longitude=c(-33.144,-32.105,-32.941,-32.773,-31.839,-32.869,-32.202,-31.394,-32.31,-34.918),
)
latitude=c(149.042,149.458,150.43,150.617,151.399,152.023,152.657,152.757,152.781,152.971)
longitude=c(-33.144,-32.105,-32.941,-32.773,-31.839,-32.869,-32.202,-31.394,-32.31,-34.918)
geocode <- data.frame(latitude,longitude)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= geocode$longitude, lat=geocode$latitude, popup=geocode$label)
m
latitude=c(149.042,149.458,150.43,150.617,151.399,200.023,152.657,152.757,152.781,152.971)
geocode <- data.frame(latitude,longitude)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= geocode$longitude, lat=geocode$latitude, popup=geocode$label)
m
library(leaflet)
# location_example = c('1111 S Figueroa St, Los Angeles, CA 90015, United States',
#                      '1313 Disneyland Dr, Anaheim, CA 92802, United States')
# geocode  <- do.call(rbind, lapply(location_example, street2coordinates))
# geocode  <- geocode %>% select(full.address, longitude, latitude)
# label <- c('Staples Center', 'Disneyland')
# geocode <- data.frame(geocode, label=label)
# print(geocode)
latitude=c(149.042,149.458,150.43,150.617,151.399,2000.023,152.657,152.757,152.781,152.971)
longitude=c(-33.144,-32.105,-32.941,-32.773,-31.839,-32.869,-32.202,-31.394,-32.31,-34.918)
geocode <- data.frame(latitude,longitude)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= geocode$longitude, lat=geocode$latitude, popup=geocode$label)
m
library(leaflet)
# location_example = c('1111 S Figueroa St, Los Angeles, CA 90015, United States',
#                      '1313 Disneyland Dr, Anaheim, CA 92802, United States')
# geocode  <- do.call(rbind, lapply(location_example, street2coordinates))
# geocode  <- geocode %>% select(full.address, longitude, latitude)
# label <- c('Staples Center', 'Disneyland')
# geocode <- data.frame(geocode, label=label)
# print(geocode)
latitude=c(149.042,149.458,150.43,150.617,151.399,2000.023,152.657,152.757,152.781,152.971)
longitude=c(-33.144,-32.105,-32.941,-32.773,-31.839,-2000.869,-32.202,-31.394,-32.31,-34.918)
geocode <- data.frame(latitude,longitude)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= geocode$longitude, lat=geocode$latitude, popup=geocode$label)
m
library(leaflet)
# location_example = c('1111 S Figueroa St, Los Angeles, CA 90015, United States',
#                      '1313 Disneyland Dr, Anaheim, CA 92802, United States')
# geocode  <- do.call(rbind, lapply(location_example, street2coordinates))
# geocode  <- geocode %>% select(full.address, longitude, latitude)
# label <- c('Staples Center', 'Disneyland')
# geocode <- data.frame(geocode, label=label)
# print(geocode)
latitude=c(31.582045)
longitude=c(74.329376)
geocode <- data.frame(latitude,longitude)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= geocode$longitude, lat=geocode$latitude, popup=geocode$label)
m
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
?addCircleMarkers
?addCircleMarkers
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
runApp('precon dashboard')
View(geocode)
View(geocode)
View(geocode)
View(geocode)
geocode <- read.csv(file = "longlat.csv", sep = ",")[,2:3]
geocode <- read.csv(file = "longlat.csv", sep = ",")[,2:3]
geocode <- read.csv(file = "longlat.csv", sep = ",")
geocode <- read.csv(file = "longlat.csv", sep = ",")
geocode <- read.csv(file = "House1.csv", sep = ",")
geocode <- read.csv(file = "longlat.csv", sep = ",")
geocode <- read.csv(file = "longlat.csv", sep = ",")
f <- file.choose()
f
geocode <- read.csv(file = "C:\\Users\\g5\\Documents\\precon dashboard\\longlat.csv", sep = ",")
View(geocode)
geocode <- read.csv(file = "C:\\Users\\g5\\Documents\\precon dashboard\\longlat.csv", sep = ",")[,3:4]
View(geocode)
runApp('precon dashboard')
View(geocode)
geocode <- read.csv(file = "C:\\Users\\g5\\Documents\\precon dashboard\\longlat.csv", sep = ",")[,3:4]
m <- leaflet(option=leafletOptions(maxZoom = 15)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircles(lng= geocode$Lat, lat=geocode$Lng,
radius = 250,
stroke = FALSE, fillOpacity = 0.5
)
m
m <- leaflet(option=leafletOptions(maxZoom = 15)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircles(lng= geocode$Lng, lat=geocode$Lat,
radius = 250,
stroke = FALSE, fillOpacity = 0.5
)
m
runApp('precon dashboard')
runApp('precon dashboard')
shiny::runApp('precon dashboard')
shiny::runApp('precon dashboard')
